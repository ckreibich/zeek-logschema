### BTest baseline data generated by btest-diff. Do not edit. Use "btest -U/-u" to update. Requires BTest >= 0.63.
{"log":"logschema","field":"log","_type":"string","record_type":"Log::Schema::Log::Field","script":"logschema/export/log.zeek","is_optional":false,"docstring":"Name of the log, e.g. \"conn\""}
{"log":"logschema","field":"field","_type":"string","record_type":"Log::Schema::Log::Field","script":"logschema/export/log.zeek","is_optional":false,"docstring":"Name of the field, e.g \"uid\""}
{"log":"logschema","field":"_type","_type":"string","record_type":"Log::Schema::Log::Field","script":"logschema/export/log.zeek","is_optional":false,"docstring":"Zeek type of the field (e.g. \"string\", \"addr\", \"bool\")"}
{"log":"logschema","field":"record_type","_type":"string","record_type":"Log::Schema::Log::Field","script":"logschema/export/log.zeek","is_optional":false,"docstring":"Record type containing this field (e.g. \"Conn::Info\", \"conn_id\")."}
{"log":"logschema","field":"script","_type":"string","record_type":"Log::Schema::Log::Field","script":"logschema/export/log.zeek","is_optional":false,"docstring":"Script that defines the field, relative to the scripts folder (e.g. \"base/init-bare.zeek\")."}
{"log":"logschema","field":"is_optional","_type":"bool","record_type":"Log::Schema::Log::Field","script":"logschema/export/log.zeek","is_optional":false,"docstring":"Whether the field is optional."}
{"log":"logschema","field":"_default","_type":"string","record_type":"Log::Schema::Log::Field","script":"logschema/export/log.zeek","is_optional":true,"docstring":"Default value of the field, if defined. Stringified since \"any\" and logging do not get along."}
{"log":"logschema","field":"docstring","_type":"string","record_type":"Log::Schema::Log::Field","script":"logschema/export/log.zeek","is_optional":true,"docstring":"If available, the docstring for the field."}
{"log":"logschema","field":"package","_type":"string","record_type":"Log::Schema::Log::Field","script":"logschema/export/log.zeek","is_optional":true,"docstring":"If part of a Zeek package, the package's name sans owner (\"hello-world\", not \"zeek/hello-world\")."}
{"log":"test","field":"a","_type":"addr","record_type":"Testlog::Info","script":"testlog.zeek","is_optional":false,"docstring":"An address."}
{"log":"test","field":"b","_type":"bool","record_type":"Testlog::Info","script":"testlog.zeek","is_optional":false,"docstring":"A boolean."}
{"log":"test","field":"c","_type":"count","record_type":"Testlog::Info","script":"testlog.zeek","is_optional":false,"docstring":"A count."}
{"log":"test","field":"d","_type":"double","record_type":"Testlog::Info","script":"testlog.zeek","is_optional":false,"docstring":"A double."}
{"log":"test","field":"e","_type":"enum transport_proto","record_type":"Testlog::Info","script":"testlog.zeek","is_optional":false,"docstring":"An enum."}
{"log":"test","field":"i","_type":"int","record_type":"Testlog::Info","script":"testlog.zeek","is_optional":false,"docstring":"An integer."}
{"log":"test","field":"ival","_type":"interval","record_type":"Testlog::Info","script":"testlog.zeek","is_optional":false,"docstring":"An interval."}
{"log":"test","field":"p","_type":"port","record_type":"Testlog::Info","script":"testlog.zeek","is_optional":false,"docstring":"A port."}
{"log":"test","field":"r.orig_h","_type":"addr","record_type":"conn_id","script":"base/init-bare.zeek","is_optional":false,"docstring":"The originator's IP address."}
{"log":"test","field":"r.orig_p","_type":"port","record_type":"conn_id","script":"base/init-bare.zeek","is_optional":false,"docstring":"The originator's port number."}
{"log":"test","field":"r.resp_h","_type":"addr","record_type":"conn_id","script":"base/init-bare.zeek","is_optional":false,"docstring":"The responder's IP address."}
{"log":"test","field":"r.resp_p","_type":"port","record_type":"conn_id","script":"base/init-bare.zeek","is_optional":false,"docstring":"The responder's port number."}
{"log":"test","field":"st","_type":"set[count]","record_type":"Testlog::Info","script":"testlog.zeek","is_optional":false,"docstring":"A set."}
{"log":"test","field":"s","_type":"string","record_type":"Testlog::Info","script":"testlog.zeek","is_optional":false,"docstring":"A string."}
{"log":"test","field":"sub","_type":"subnet","record_type":"Testlog::Info","script":"testlog.zeek","is_optional":false,"docstring":"A subnet."}
{"log":"test","field":"t","_type":"time","record_type":"Testlog::Info","script":"testlog.zeek","is_optional":false,"docstring":"A timestamp."}
{"log":"test","field":"v","_type":"vector of count","record_type":"Testlog::Info","script":"testlog.zeek","is_optional":false,"docstring":"A vector."}
{"log":"test","field":"sd","_type":"string","record_type":"Testlog::Info","script":"testlog.zeek","is_optional":true,"_default":"yes","docstring":"A default value."}
{"log":"test","field":"so","_type":"string","record_type":"Testlog::Info","script":"testlog.zeek","is_optional":true,"docstring":"An optional value."}
{"log":"test","field":"aa_plaincomment","_type":"string","record_type":"Testlog::Info","script":"testlog.zeek","is_optional":false}
